# Autogenerated by pybind stub generator
# Do not manually edit
# To regenerate:
#   $ buck run //mapillary/opensfm/opensfm/src/geo:pygeo_stubgen
# @generated

import numpy
from typing import *
__all__  = [
"TopocentricConverter",
"ecef_from_lla",
"ecef_from_topocentric_transform",
"ecef_from_topocentric_transform_finite_diff",
"gps_distance",
"lla_from_ecef",
"lla_from_topocentric",
"topocentric_from_lla"
]
class TopocentricConverter:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: float, arg2: float) -> None: ...
    @property
    def alt(self) -> float:...
    @property
    def lat(self) -> float:...
    @property
    def lon(self) -> float:...
@overload
def ecef_from_lla(arg0: float, arg1: float, arg2: float) -> numpy.ndarray:...
@overload
def ecef_from_lla(arg0: numpy.ndarray) -> numpy.ndarray:...
@overload
def ecef_from_topocentric_transform(arg0: numpy.ndarray) -> numpy.ndarray:...
@overload
def ecef_from_topocentric_transform(arg0: float, arg1: float, arg2: float) -> numpy.ndarray:...
@overload
def ecef_from_topocentric_transform_finite_diff(arg0: float, arg1: float, arg2: float) -> numpy.ndarray:...
@overload
def ecef_from_topocentric_transform_finite_diff(arg0: numpy.ndarray) -> numpy.ndarray:...
def gps_distance(arg0: numpy.ndarray, arg1: numpy.ndarray) -> float:...
@overload
def lla_from_ecef(arg0: float, arg1: float, arg2: float) -> numpy.ndarray:...
@overload
def lla_from_ecef(arg0: numpy.ndarray) -> numpy.ndarray:...
@overload
def lla_from_topocentric(arg0: numpy.ndarray, arg1: numpy.ndarray) -> numpy.ndarray:...
@overload
def lla_from_topocentric(arg0: float, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float) -> numpy.ndarray:...
@overload
def topocentric_from_lla(arg0: numpy.ndarray, arg1: numpy.ndarray) -> numpy.ndarray:...
@overload
def topocentric_from_lla(arg0: float, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float) -> numpy.ndarray:...
