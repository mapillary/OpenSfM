# Autogenerated by pybind stub generator
# Do not manually edit
# To regenerate:
#   $ buck run //mapillary/opensfm/opensfm/src/robust:pyrobust_stubgen
# @generated

import numpy
from typing import *
__all__  = [
"RansacType",
"RobustEstimatorParams",
"ScoreInfoLine",
"ScoreInfoMatrix34d",
"ScoreInfoMatrix3d",
"ScoreInfoMatrix4d",
"ScoreInfoVector3d",
"ransac_absolute_pose",
"ransac_absolute_pose_known_rotation",
"ransac_essential",
"ransac_line",
"ransac_relative_pose",
"ransac_relative_rotation",
"ransac_similarity",
"LMedS",
"MSAC",
"RANSAC"
]
class RansacType:
    RANSAC: "RansacType"
    MSAC: "RansacType"
    LMedS: "RansacType"
    __members__: Dict[str, "RansacType"]
    @property
    def name(self) -> str: ...
class RobustEstimatorParams:
    def __init__(self) -> None: ...
    @property
    def iterations(self) -> int:...
    @iterations.setter
    def iterations(self, arg0: int) -> None:...
    @property
    def probability(self) -> float:...
    @probability.setter
    def probability(self, arg0: float) -> None:...
    @property
    def use_iteration_reduction(self) -> bool:...
    @use_iteration_reduction.setter
    def use_iteration_reduction(self, arg0: bool) -> None:...
    @property
    def use_local_optimization(self) -> bool:...
    @use_local_optimization.setter
    def use_local_optimization(self, arg0: bool) -> None:...
class ScoreInfoLine:
    def __init__(self) -> None: ...
    @property
    def inliers_indices(self) -> List[int]:...
    @inliers_indices.setter
    def inliers_indices(self, arg0: List[int]) -> None:...
    @property
    def lo_model(self) -> numpy.ndarray:...
    @lo_model.setter
    def lo_model(self, arg0: numpy.ndarray) -> None:...
    @property
    def model(self) -> numpy.ndarray:...
    @model.setter
    def model(self, arg0: numpy.ndarray) -> None:...
    @property
    def score(self) -> float:...
    @score.setter
    def score(self, arg0: float) -> None:...
class ScoreInfoMatrix34d:
    def __init__(self) -> None: ...
    @property
    def inliers_indices(self) -> List[int]:...
    @inliers_indices.setter
    def inliers_indices(self, arg0: List[int]) -> None:...
    @property
    def lo_model(self) -> numpy.ndarray:...
    @lo_model.setter
    def lo_model(self, arg0: numpy.ndarray) -> None:...
    @property
    def model(self) -> numpy.ndarray:...
    @model.setter
    def model(self, arg0: numpy.ndarray) -> None:...
    @property
    def score(self) -> float:...
    @score.setter
    def score(self, arg0: float) -> None:...
class ScoreInfoMatrix3d:
    def __init__(self) -> None: ...
    @property
    def inliers_indices(self) -> List[int]:...
    @inliers_indices.setter
    def inliers_indices(self, arg0: List[int]) -> None:...
    @property
    def lo_model(self) -> numpy.ndarray:...
    @lo_model.setter
    def lo_model(self, arg0: numpy.ndarray) -> None:...
    @property
    def model(self) -> numpy.ndarray:...
    @model.setter
    def model(self, arg0: numpy.ndarray) -> None:...
    @property
    def score(self) -> float:...
    @score.setter
    def score(self, arg0: float) -> None:...
class ScoreInfoMatrix4d:
    def __init__(self) -> None: ...
    @property
    def inliers_indices(self) -> List[int]:...
    @inliers_indices.setter
    def inliers_indices(self, arg0: List[int]) -> None:...
    @property
    def lo_model(self) -> numpy.ndarray:...
    @lo_model.setter
    def lo_model(self, arg0: numpy.ndarray) -> None:...
    @property
    def model(self) -> numpy.ndarray:...
    @model.setter
    def model(self, arg0: numpy.ndarray) -> None:...
    @property
    def score(self) -> float:...
    @score.setter
    def score(self, arg0: float) -> None:...
class ScoreInfoVector3d:
    def __init__(self) -> None: ...
    @property
    def inliers_indices(self) -> List[int]:...
    @inliers_indices.setter
    def inliers_indices(self, arg0: List[int]) -> None:...
    @property
    def lo_model(self) -> numpy.ndarray:...
    @lo_model.setter
    def lo_model(self, arg0: numpy.ndarray) -> None:...
    @property
    def model(self) -> numpy.ndarray:...
    @model.setter
    def model(self, arg0: numpy.ndarray) -> None:...
    @property
    def score(self) -> float:...
    @score.setter
    def score(self, arg0: float) -> None:...
def ransac_absolute_pose(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoMatrix34d:...
def ransac_absolute_pose_known_rotation(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoVector3d:...
def ransac_essential(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoMatrix3d:...
def ransac_line(arg0: numpy.ndarray, arg1: float, arg2: RobustEstimatorParams, arg3: RansacType) -> ScoreInfoLine:...
def ransac_relative_pose(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoMatrix34d:...
def ransac_relative_rotation(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoMatrix3d:...
def ransac_similarity(arg0: numpy.ndarray, arg1: numpy.ndarray, arg2: float, arg3: RobustEstimatorParams, arg4: RansacType) -> ScoreInfoMatrix4d:...
LMedS = ...
MSAC = ...
RANSAC = ...